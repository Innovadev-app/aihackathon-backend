AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: A starter AWS Lambda function.
Resources:
  timothyBackendAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: 'Timothy-Backend-API'
      StageName: prod

  bedrockinvoke:
    Type: 'AWS::Serverless::Function'
    Properties:
      Architectures:
        - arm64
      Handler: bedrock-invoke.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-west-2:378530652592:layer:boto3-mylayer:1
      Policies:
        - Statement:
          - Sid: BedRockPolicy
            Effect: Allow
            Action: bedrock:InvokeModel
            Resource:
              - arn:aws:bedrock:*:560466782437:provisioned-model/*
              - arn:aws:bedrock:*::foundation-model/*
              - arn:aws:bedrock:*:560466782437:custom-model/*
          - Sid: AllowLogs
            Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              - arn:aws:logs:us-west-2:560466782437:*
          - Sid: AllowLogStream
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-west-2:560466782437:log-group:/aws/lambda/InvokeBedrock:*
      CodeUri: ./src/bedrock-invoke
      Description: Bedrock invoke Lambda Function
      MemorySize: 512
      Timeout: 30
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /bedrock
            Method: post
            RestApiId:
              Ref: timothyBackendAPI

  timothychat:
    Type: 'AWS::Serverless::Function'
    Properties:
      Architectures:
        - arm64
      Handler: timothy-chat.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-west-2:378530652592:layer:boto3-mylayer:1
      Policies:
        - Statement:
          - Sid: S3Policy
            Effect: Allow
            Action: s3:*
            Resource:
              - arn:aws:s3:::timothy-aihackathon-data
              - arn:aws:s3:::timothy-aihackathon-data/*
          - Sid: AllowLogs
            Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              - arn:aws:logs:us-west-2:560466782437:*
          - Sid: AllowLogStream
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-west-2:560466782437:log-group:/aws/lambda/timothychat:*
          - Sid: KendraSearchPolicy
            Effect: Allow
            Action:
              - kendra:Query
              - kendra:GetQuerySuggestions
              - kendra:DescribeIndex
              - kendra:Retrieve
              - kendra:ListFaqs
              - kendra:DescribeDataSource
              - kendra:ListDataSources
              - kendra:DescribeThesaurus
              - kendra:DescribeFaq
              - kendra:ListDataSourceSyncJobs
              - kendra:DescribeQuerySuggestionsBlockList
              - kendra:DescribeExperience
            Resource:
              - arn:aws:kendra:*:378530652592:index/*
          - Sid: AllowListIndices
            Effect: Allow
            Action: kendra:ListIndices
            Resource:
              - '*'
          - Sid: BedRockPolicy
            Effect: Allow
            Action: bedrock:InvokeModel
            Resource:
              - arn:aws:bedrock:*:560466782437:provisioned-model/*
              - arn:aws:bedrock:*::foundation-model/*
              - arn:aws:bedrock:*:560466782437:custom-model/*
      CodeUri: ./src/timothy-chat
      Description: Parse Timothy Chat
      MemorySize: 512
      Timeout: 120
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /timothy-chat
            Method: post
            RestApiId:
              Ref: timothyBackendAPI

  recommendationsSave:
    Type: 'AWS::Serverless::Function'
    Properties:
      Architectures:
        - arm64
      Handler: timothy-chat.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-west-2:378530652592:layer:boto3-mylayer:1
      Policies:
        - Statement:
          - Sid: S3Policy
            Effect: Allow
            Action: s3:*
            Resource:
              - arn:aws:s3:::timothy-aihackathon-data
              - arn:aws:s3:::timothy-aihackathon-data/*
          - Sid: AllowLogs
            Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              - arn:aws:logs:us-west-2:560466782437:*
          - Sid: AllowLogStream
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:us-west-2:560466782437:log-group:/aws/lambda/timothychat:*
          - Sid: DynamoDBAccess
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:GetRecords
            Resource: !GetAtt rRecommendationsTable.arn
            - Sid: DynamoDB List
              Effect: Allow
              Action:
                - dynamodb:ListTables
              Resource: 
                - '*'
      CodeUri: ./src/recommendations
      Description: Get Timothy Recommendations
      MemorySize: 512
      Timeout: 120
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /timothy-chat
            Method: get
            RestApiId:
              Ref: timothyBackendAPI
  
  kendrasearch:
    Type: 'AWS::Serverless::Function'
    Properties:
      Architectures:
        - arm64
      Handler: kendra-search.lambda_handler
      Runtime: python3.11
      Layers:
        - arn:aws:lambda:us-west-2:378530652592:layer:boto3-mylayer:1
      Policies:
        - Statement:
          - Sid: KendraSearchPolicy
            Effect: Allow
            Action:
              - kendra:Query
              - kendra:GetQuerySuggestions
              - kendra:DescribeIndex
              - kendra:Retrieve
              - kendra:ListFaqs
              - kendra:DescribeDataSource
              - kendra:ListDataSources
              - kendra:DescribeThesaurus
              - kendra:DescribeFaq
              - kendra:ListDataSourceSyncJobs
              - kendra:DescribeQuerySuggestionsBlockList
              - kendra:DescribeExperience
            Resource:
              - arn:aws:kendra:*:378530652592:index/*
          - Sid: AllowListIndices
            Effect: Allow
            Action: kendra:ListIndices
            Resource:
              - '*'
          - Sid: AllowLogStream
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-west-2:560466782437:log-group:/aws/lambda/kendrasearch:*
          - Sid: KendraDescribe
            Effect: Allow
            Action:
              - kendra:DescribeDataSource
              - kendra:DescribeThesaurus
              - kendra:DescribeFaq
              - kendra:ListDataSourceSyncJobs
              - kendra:DescribeQuerySuggestionsBlockList
              - kendra:DescribeExperience
            Resource:
              - arn:aws:kendra:*:378530652592:index/*/thesaurus/*
              - arn:aws:kendra:*:378530652592:index/*/data-source/*
              - arn:aws:kendra:*:378530652592:index/*/query-suggestions-block-list/*
              - arn:aws:kendra:*:378530652592:index/*/faq/*
              - arn:aws:kendra:*:378530652592:index/*/experience/*
      CodeUri: ./src/kendra-search
      Description: Kendra Search Lambda Function
      MemorySize: 512
      Timeout: 30
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /kendra
            Method: post
            RestApiId:
              Ref: timothyBackendAPI

  dataBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: timothy-aihackathon-data

  KendraIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Kendra Index IAM Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - kendra.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'cloudwatch:PutMetricData'
                Resource: '*'
                Condition:
                  StringEquals:
                    "cloudwatch:namespace": "AWS/Kendra"
              - Effect: Allow
                Action: 'logs:DescribeLogGroups'
                Resource: '*'
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kendra/*'
              - Effect: Allow
                Action:
                  - 'logs:DescribeLogStreams'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kendra/*:log-stream:*'

  kendraIndex:
    Type: AWS::Kendra::Index
    Properties:
      Description: Timothy Kendra Index
      Edition: DEVELOPER_EDITION
      Name: Timothy-Index
      RoleArn: !GetAtt KendraIAMRole.Arn

  kendraS3SermonDataSource:
    Type: AWS::Kendra::DataSource
    Properties:
      Description: Timothy Sermons Amazon S3 Data Source
      IndexId: !GetAtt kendraIndex.Id
      Name: Timothy-Sermons-Amazon-S3-Data-Source
      RoleArn: !GetAtt KendraIAMRole.Arn
      Type: S3
      DataSourceConfiguration:
        S3Configuration:
          BucketName: !Ref dataBucket
          InclusionPrefixes:
            - pdf-sermons/
      Schedule: cron(0 12 * * ? *)

  ###############################
  ###### WEB CRAWLER
  ###############################
  ##Kendra Index Role
  rWSKendraIndexRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'WSKendraIndex'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: kendra.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'TimothyAiWsPolicy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Condition:
                  StringEquals:
                    'cloudwatch:namespace': 'Kendra'
                Action:
                  - 'cloudwatch:PutMetricData'
              - Effect: Allow
                Resource: '*'
                Action: 'logs:DescribeLogGroups'
              - Effect: Allow
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kendra/*'
                Action: 'logs:CreateLogGroup'
              - Effect: Allow
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kendra/*:log-stream:*'
                Action:
                  - 'logs:DescribeLogStreams'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'

  ##DS Web Crawler Role
  rWebCrawlerKendraDsWsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'TimothyAiDsWsRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: 'timothyaids'
            Effect: Allow
            Principal:
              Service: kendra.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub 'arn:aws:kendra:${AWS::Region}:${AWS::AccountId}:index/${kendraIndex.Id}'
                Action:
                  - 'kendra:BatchPutDocument'
                  - 'kendra:BatchDeleteDocument'
          PolicyName: !Sub '${AWS::StackName}-WsDocsDsPolicy'

  # Web Crawler Data Crawler
  rWebCrawlerKendraDS:
    Type: 'AWS::Kendra::DataSource'
    Properties:
      IndexId: !GetAtt kendraIndex.Id
      Name: 'KendraDocsDS'
      RoleArn: !GetAtt rWebCrawlerKendraDsWsRole.Arn
      Type: 'WEBCRAWLER'
      Schedule: cron(0 12 * * ? *)
      DataSourceConfiguration:
        WebCrawlerConfiguration:
          Urls:
          #   SeedUrlConfiguration:
          #     SeedUrls:
          #       - "https://bcponline.org/"
              # WebCrawlerMode: "HOST_ONLY"
            SiteMapsConfiguration:
                 SiteMaps:
                      - "https://bcponline.org/sitemap.xml"

  rRecommendationsTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "Classification"
          AttributeType: "S"
        - 
          AttributeName: "ProfileID"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "Classification"
          KeyType: "HASH"
        - 
          AttributeName: "ProfileID"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "TimothyRecommendationsTable"